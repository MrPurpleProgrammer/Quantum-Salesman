[{"C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\index.js":"1","C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\reportWebVitals.js":"2","C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\App.js":"3","C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\components\\Map.js":"4","c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\index.js":"5","c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\App.js":"6","c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\reportWebVitals.js":"7","c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\components\\Map.js":"8","C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\components\\TSPGeoCalc.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":653,"mtime":1611216773315,"results":"13","hashOfConfig":"11"},{"size":7683,"mtime":1611106688179,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":596,"mtime":1611091161571,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":7683,"mtime":1611106688179,"results":"19","hashOfConfig":"16"},{"size":16842,"mtime":1611297427276,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1r0ifu1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1apgys5",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\index.js",[],["42","43"],"C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\reportWebVitals.js",[],"C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\App.js",["44"],"import './App.css';\nimport Map from './components/Map'\nimport TSPGeoCalc from './components/TSPGeoCalc';\n\nfunction App() {\n  return (\n    <div id=\"divContainer\">\n      <div id=\"divHeader\" className=\"parentHeaderContainer\">\n        <div className=\"headerContainer\">\n          <div id=\"divLogo\" className=\"logoContainer headerContent\">\n            <i className=\"fas fa-atom\"></i>\n            <h1>Quantum Salesman</h1>\n          </div>\n          <h1 className=\"headeContent\">Home</h1>\n        </div>\n      </div>\n      <div id=\"divContent\">\n        <TSPGeoCalc />\n      </div>\n      <div id=\"divFooter\">\n\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\components\\Map.js",["45","46","47"],"import $ from 'jquery'\r\nimport { useRef, useState, useEffect } from 'react'\r\nimport mapboxgl from 'mapbox-gl'; // or \"const mapboxgl = require('mapbox-gl');\"\r\nimport MapboxDirections from '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions'\r\nimport '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions.css'\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibXJwdXJwbGUiLCJhIjoiY2tqcnA4NWs1MXRzdzJ4bGV3eHFuemx1cSJ9.R1GOV--AHq_E-pN8xd9NcA';\r\n\r\nfunction Map() {\r\n    const mapContainer = useRef('')\r\n    const [map, setMap] = useState(null)\r\n    // create a function to make a directions request\r\n    function getRoute(end, map) {\r\n        // make a directions request using cycling profile\r\n        // an arbitrary start will always be the same\r\n        // only the end or destination will change\r\n        var start = [-122.662323, 45.523751];\r\n        var url = 'https://api.mapbox.com/directions/v5/mapbox/driving/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;\r\n\r\n        // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\r\n        var req = new XMLHttpRequest();\r\n        req.open('GET', url, true);\r\n        req.onload = function () {\r\n            var json = JSON.parse(req.response);\r\n            var data = json.routes[0];\r\n            var route = data.geometry.coordinates;\r\n            var geojson = {\r\n                type: 'Feature',\r\n                properties: {},\r\n                geometry: {\r\n                    type: 'LineString',\r\n                    coordinates: route\r\n                }\r\n            };\r\n            // if the route already exists on the map, reset it using setData\r\n            if (map.getSource('route')) {\r\n                map.getSource('route').setData(geojson);\r\n            } \r\n            else { // otherwise, make a new request\r\n                map.addLayer({\r\n                    id: 'route',\r\n                    type: 'line',\r\n                    source: {\r\n                        type: 'geojson',\r\n                        data: {\r\n                            type: 'Feature',\r\n                            properties: {},\r\n                            geometry: {\r\n                                type: 'LineString',\r\n                                coordinates: geojson\r\n                            }\r\n                        }\r\n                    },\r\n                    layout: {\r\n                        'line-join': 'round',\r\n                        'line-cap': 'round'\r\n                    },\r\n                    paint: {\r\n                        'line-color': '#3887be',\r\n                        'line-width': 5,\r\n                        'line-opacity': 0.75\r\n                    }\r\n                });\r\n            }\r\n            // add turn instructions here at the end\r\n        };\r\n        req.send();\r\n    }\r\n    let createMapObj = (start) => {\r\n        const _map = new mapboxgl.Map({\r\n            container: 'divMap',\r\n            style: 'mapbox://styles/mrpurple/ckjrpxuxd23s419l9qlhkpo96',\r\n            center: [-74.5, 40], // starting position [lng, lat]\r\n            zoom: 9 // starting zoom\r\n        });\r\n        var nav = new mapboxgl.NavigationControl();\r\n        _map.addControl(nav, 'bottom-left');\r\n        // Creates new directions control instance\r\n        const directions = new MapboxDirections({\r\n            container: 'divDirections',\r\n            accessToken: mapboxgl.accessToken,\r\n            unit: 'metric',\r\n            profile: 'mapbox/driving',\r\n        });\r\n        // Integrates directions control with map\r\n        _map.addControl(directions, 'top-left');\r\n        var marker = new mapboxgl.Marker({ draggable: true }).setLngLat([0, 0]).addTo(_map);\r\n        var coordinates = document.getElementById('coordinates');\r\n        function onDragEnd() {\r\n            var lngLat = marker.getLngLat();\r\n            coordinates.style.display = 'block';\r\n            coordinates.innerHTML =\r\n                'Longitude: ' + lngLat.lng + '<br />Latitude: ' + lngLat.lat;\r\n        }\r\n        marker.on('dragend', onDragEnd);\r\n        _map.on('move', () => {\r\n            // access longitude and latitude values directly\r\n            console.log({\r\n                lng: _map.getCenter().lng.toFixed(4),\r\n                lat: _map.getCenter().lat.toFixed(4),\r\n                zoom: _map.getZoom().toFixed(2),\r\n                bearing: _map.getBearing(),\r\n            });\r\n        });\r\n        _map.on('load', function () {\r\n            // make an initial directions request that\r\n            // starts and ends at the same location\r\n            getRoute(start, _map);\r\n            // Add starting point to the map\r\n            _map.addLayer({\r\n                id: 'point',\r\n                type: 'circle',\r\n                source: {\r\n                    type: 'geojson',\r\n                    data: {\r\n                        type: 'FeatureCollection',\r\n                        features: [{\r\n                            type: 'Feature',\r\n                            properties: {},\r\n                            geometry: {\r\n                                type: 'Point',\r\n                                coordinates: start\r\n                            }\r\n                        }\r\n                        ]\r\n                    }\r\n                },\r\n                paint: {\r\n                    'circle-radius': 10,\r\n                    'circle-color': '#3887be'\r\n                }\r\n            });\r\n            // this is where the code from the next step will go\r\n        });\r\n        _map.on('click', function (e) {\r\n            var coordsObj = e.lngLat;\r\n            var coords = Object.keys(coordsObj).map(function (key) {\r\n                return coordsObj[key];\r\n            });\r\n            var end = {\r\n                type: 'FeatureCollection',\r\n                features: [{\r\n                    type: 'Feature',\r\n                    properties: {},\r\n                    geometry: {\r\n                        type: 'Point',\r\n                        coordinates: coords\r\n                    }\r\n                }\r\n                ]\r\n            };\r\n            if (_map.getLayer('end')) {\r\n                _map.getSource('end').setData(end);\r\n            } else {\r\n                _map.addLayer({\r\n                    id: 'end',\r\n                    type: 'circle',\r\n                    source: {\r\n                        type: 'geojson',\r\n                        data: {\r\n                            type: 'FeatureCollection',\r\n                            features: [{\r\n                                type: 'Feature',\r\n                                properties: {},\r\n                                geometry: {\r\n                                    type: 'Point',\r\n                                    coordinates: coords\r\n                                }\r\n                            }]\r\n                        }\r\n                    },\r\n                    paint: {\r\n                        'circle-radius': 10,\r\n                        'circle-color': '#f30'\r\n                    }\r\n                });\r\n            }\r\n            getRoute(coords, _map);\r\n        });\r\n        _map.resize();\r\n        setMap(_map);\r\n        return _map;\r\n    }\r\n    useEffect(() => {\r\n        let start = [-122.477738, 43.562458]\r\n        createMapObj(start);\r\n    }, [])\r\n    return (\r\n        <div className=\"parentMapContainer\" >\r\n            <div id='divMap' ref={mapContainer} className='mapContainer' />\r\n            <pre id=\"coordinates\" class=\"coordinates\"></pre>\r\n            <div id=\"divDirections\" className=\"directionsContainer\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map","c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\index.js",[],"c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\App.js",[],"c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\reportWebVitals.js",[],"c:\\MyData\\Projects\\Quantum Salesman\\client\\src\\components\\Map.js",["48","49","50"],"C:\\MyData\\Projects\\Quantum Salesman\\client\\src\\components\\TSPGeoCalc.js",["51","52","53","54","55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":11},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":9},{"ruleId":"61","severity":1,"message":"66","line":11,"column":12,"nodeType":"63","messageId":"64","endLine":11,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":187,"column":8,"nodeType":"69","endLine":187,"endColumn":10,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":9},{"ruleId":"61","severity":1,"message":"66","line":11,"column":12,"nodeType":"63","messageId":"64","endLine":11,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":187,"column":8,"nodeType":"69","endLine":187,"endColumn":10,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"72","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":13},{"ruleId":"61","severity":1,"message":"73","line":15,"column":12,"nodeType":"63","messageId":"64","endLine":15,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":132,"column":56,"nodeType":"76","messageId":"77","endLine":132,"endColumn":58},{"ruleId":"61","severity":1,"message":"78","line":191,"column":21,"nodeType":"63","messageId":"64","endLine":191,"endColumn":31},{"ruleId":"61","severity":1,"message":"79","line":358,"column":17,"nodeType":"63","messageId":"64","endLine":358,"endColumn":23},{"ruleId":"67","severity":1,"message":"80","line":411,"column":8,"nodeType":"69","endLine":411,"endColumn":32,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'map' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createMapObj'. Either include it or remove the dependency array.","ArrayExpression",["84"],["85"],"'map' is defined but never used.","'mapState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currentLoc' is assigned a value but never used.","'center' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkAddressInServiceArea', 'getIso', 'getReverseGeocode', 'orders', and 'storeLocation'. Either include them or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [createMapObj]",{"range":"92","text":"93"},{"range":"94","text":"93"},"Update the dependencies array to be: [addressList, checkAddressInServiceArea, getIso, getReverseGeocode, orders, storeLocation, titleText]",{"range":"95","text":"96"},[7355,7357],"[createMapObj]",[7355,7357],[16232,16256],"[addressList, checkAddressInServiceArea, getIso, getReverseGeocode, orders, storeLocation, titleText]"]